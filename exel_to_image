import os
import pandas as pd
from pdf2image import convert_from_path
import libreoffice_convert as libre_convert # Importe la bibliothèque

def convert_excel_sheet_to_image_linux(excel_path, output_folder="images_from_excel"):
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # Assurez-vous que le chemin vers votre fichier Excel est absolu
    abs_excel_path = os.path.abspath(excel_path)
    
    # Vérifier si LibreOffice est accessible
    # libreoffice-convert utilise la commande 'soffice' ou 'libreoffice'
    # Il est bon de s'assurer qu'il est dans le PATH
    try:
        # Tente de convertir le fichier entier d'abord pour avoir un aperçu
        # libreoffice-convert convertit tout le document en un seul PDF par défaut
        temp_pdf_path = os.path.join(output_folder, "temp_full_excel.pdf")
        libre_convert.convert(abs_excel_path, temp_pdf_path)
        print(f"Fichier Excel entier converti temporairement en PDF: {temp_pdf_path}")

    except Exception as e:
        print(f"Erreur lors de la conversion de l'Excel en PDF via LibreOffice: {e}")
        print("Assurez-vous que LibreOffice est installé et accessible via la commande 'soffice' ou 'libreoffice' dans votre PATH.")
        return

    # Utiliser pandas pour lister les noms de feuilles
    try:
        xls = pd.ExcelFile(abs_excel_path, engine='openpyxl')
        sheet_names = xls.sheet_names
        print(f"Feuilles détectées: {sheet_names}")
    except Exception as e:
        print(f"Erreur lors de la lecture des feuilles Excel avec pandas: {e}")
        return

    # Pour l'instant, libreoffice-convert ne permet pas de convertir une seule feuille facilement.
    # L'approche la plus fiable est de convertir tout le classeur en un seul PDF,
    # puis d'utiliser pdf2image pour extraire chaque page (qui correspondra souvent à une feuille)
    # et de les renommer. Cela suppose que chaque feuille Excel correspond à une page PDF.

    if not os.path.exists(temp_pdf_path):
        print("Le fichier PDF temporaire n'a pas été créé. Impossible de continuer.")
        return

    try:
        # Convertir le PDF entier en images
        # Cette fonction va générer une image par page du PDF
        print(f"Conversion du PDF temporaire en images...")
        images = convert_from_path(temp_pdf_path, dpi=300) # Augmentez le DPI pour une meilleure qualité

        for i, image in enumerate(images):
            # Le nom de la feuille peut être approximatif si le nombre de pages PDF
            # ne correspond pas exactement au nombre de feuilles (ex: une feuille large prend 2 pages)
            # On utilise le nom de la feuille pour la première page de la feuille.
            # Pour des cas plus complexes, il faudrait générer un PDF par feuille directement
            # (ce qui est plus difficile avec libreoffice-convert)
            
            # Simple mapping (peut être inexact pour les feuilles multi-pages)
            if i < len(sheet_names):
                image_name = f"{sheet_names[i]}.png"
            else:
                image_name = f"sheet_page_{i+1}.png" # Fallback si plus de pages que de feuilles
            
            output_image_path = os.path.join(output_folder, image_name)
            image.save(output_image_path, "PNG")
            print(f"  Page {i+1} exportée en: {output_image_path}")

        os.remove(temp_pdf_path) # Supprimer le PDF temporaire

    except Exception as e:
        print(f"Erreur lors de la conversion du PDF en images: {e}")
        print("Assurez-vous que Poppler (poppler-utils) est installé sur votre système.")

    print(f"\nConversion terminée. Les images se trouvent dans le dossier : {output_folder}")

# --- Comment l'utiliser ---
# Remplacez "votre_fichier.xlsx" par le chemin réel de votre fichier Excel
# et "mon_dossier_images" par le dossier où vous voulez enregistrer les images.
# exemple_fichier_excel = "/chemin/vers/mon/fichier/data.xlsx"
# dossier_de_sortie = "mes_images_excel_linux"

# convert_excel_sheet_to_image_linux(exemple_fichier_excel, dossier_de_sortie)

